version: 2.1

orbs:
  kubernetes: smartnews/kubernetes@2
  aws-cli: circleci/aws-cli@2.0.3

orb_dockers:
  kubernetes: &orb_docker_kubernetes 165463520094.dkr.ecr.ap-northeast-1.amazonaws.com/circleci-orbs/kubernetes:3

executors:
  kubernetes:
    docker:
      - image: *orb_docker_kubernetes

common:
  setup-variables: &setup-variables
    name: Setup variables
    command: |
      mkdir ~/.aws
      cat << EOF > ~/.aws/config
      [prd]
      output = json
      region = ap-northeast-1
      EOF
      cat << EOF > ~/.aws/credentials
      [prd]
      aws_access_key_id = ${AWS_ACCESS_KEY_ID}
      aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
      EOF

  setup-prd-variables: &setup-prd-variables
    name: Setup prd variables
    command: |
      echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $BASH_ENV
      echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $BASH_ENV
      echo "export EKS_CLUSTER_NAME=common-0" >> $BASH_ENV
      export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  setup-eks: &setup-eks
    name: Setup EKS
    command: aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME} --region ap-northeast-1
        skaffold run --profile << parameters.profile >> --default-repo << parameters.repo >>

jobs:
  build-image:
    docker:
      - image: circleci/python:3.7.5
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: *setup-prd-variables
      - run: pip install awscli --user
      - run:
          name: Build image
          command: |
            docker build -f docker/Dockerfile -t datahub-brain:openai .
      - run:
          name: Push image to ECR
          command: |
            aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin https://165463520094.dkr.ecr.ap-northeast-1.amazonaws.com
            ECR_IMAGE="165463520094.dkr.ecr.ap-northeast-1.amazonaws.com/datahub-brain:openai"
            echo ${ECR_IMAGE}
            docker tag "datahub-brain:openai" "${ECR_IMAGE}"
            docker push "${ECR_IMAGE}"
            echo "${ECR_IMAGE} is successfully pushed to remote repository."

  deploy-image:
    executor: kubernetes
    resource_class: large
    steps:
      - checkout
      - run:
          name: Apply to k8s
          command: |
            $(spaas skaffold configure -A prd -s dataplatform -C common-0)
            kubectl rollout restart deployment datahub-brain -n dataplatform

workflows:
  version: 2
  deploy:
    jobs:
      - build-image-approval:
          type: approval
          filters:
            branches:
              only:
                - main
      - build-image:
          requires:
            - build-image-approval
      - deploy-image:
          requires:
            - build-image      
